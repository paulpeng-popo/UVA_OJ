算出給定的零錢有幾種組合
首先建 dp 表
dp[x] 代表 零錢 x 共有幾種 dp[x] 組合數，其中 dp[0] 訂為 1 (代表用了一張該幣值的錢)
從最小的 coin[i] 開始，求出當零錢為 j 時，有幾種 coin[i] 的組合，且 j 逐漸增加
例如:
i = 10  coin[i] = 5
j = 5, 依序計算 dp[5], dp[10], dp[15] ... (其中 j+=5，因為最小幣值為 5)
而 dp[j] += dp[j-coin[i]]
代表: 我用了一個幣值為 coin[i] 的錢，並留下 j-coin[i] 的餘額，而這個 j-coin[i] 在前一個遞迴時必定算過，因此可直接得到答案

因為方法數過大，需要使用 long long 儲存
同時使用字串存入測資(若使用 float/double 在 cast int 的時候會有誤差)
所以可將字串移除小數點後(等同於該值乘上100)
並在對應 dp 的陣列找到答案，回傳即可