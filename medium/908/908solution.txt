將測資分成 3 組
第一組為 原本的接線
輸入 N 後，之後的 N-1 行
代表接線連接的兩點，和所需花費
for 迴圈 N-1 次後，便可加總 所有的 w 存入 old_cost

第二組為 要新增的接線
輸入 N 後，之後的 N 行
代表接線連接的兩點，和所需花費
第三組為 原有可用的接線         // 包含第一組的測資，因此原本的線只要處理這組就好
輸入 N 後，之後的 N 行
代表接線連接的兩點，和所需花費

大意為 最小展開樹的問題，同時判斷可能存在兩條以上的相同的 cost
因此使用 kruskal algorithm 作為解題方法

kruskal algorithm 流程:
先將所有邊，依照 cost 由小到大做排序
接著照順序取邊，並做判斷:
	(A) 已加入 N-1 條邊，即演算法結束。
	(B) 新加入的邊是否會形成 cycle，使用 vector 實作 Union and set
	(C) 加入新邊後，將所有相同 Union 中的元素，其 Union head 設為最小的元素
	(D) 最後將 cost += weight
輸出 new_cost (= cost) 即可
