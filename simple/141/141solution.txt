先讀入第一行的 size ，取得棋盤大小
建立動態二維 boolean 陣列儲存棋盤狀態
接著將之後 size*2 行之指令讀入
再逐步將此 size*2 個棋盤狀態存入 vector<bool**> 中
每改變完一次棋盤狀態，將此時之棋盤拿去與 vector 中所有的棋盤比對
若發現一樣，則輸出 player 勝出
而當 size*2 行指令全部讀完，無 player 勝出
則輸出 Draw
重複直到 size == 0

註: 因為想不太到如何有效率的解決比對的問題，因此採用暴力法(一個一個對)，造成時間比別人多出100倍。 目前改進想法: (1) 計算各行列上的棋子數目，存成 hash table 以此比較
                                                       (2) 用 string 01 字串 取代二維陣列  (未實現)